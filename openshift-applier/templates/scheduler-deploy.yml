---
kind: Template
apiVersion: v1
metadata:
  name: ${NAME}-build
objects: 
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      name: "${NAME}"
      app: "${NAME}"
      template: airflow-template
    name: "${NAME}"
  spec: {}

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      name: "${NAME}"
      app: "${NAME}"
      template: airflow-template
    name: "${PVC_NAME}-vol"
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: "${VOLUME_CAPACITY}"

- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    labels:
      name: "${NAME}"
      app: "${NAME}"
      template: airflow-template
    name: "${NAME}"
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: ${NAME}
      tier: web
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: ${NAME}
          tier: web
      spec:
        containers:
        - env:
          - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
            value: ${POSTGRES_CONNECTION}
          - name: AIRFLOW__CORE__LOAD_EXAMPLES
            value: "False"
          image: "${NAME}"
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 240
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: ${NAME}
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local/airflow
            name: ${NAME}-vol
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${NAME}-vol
          persistentVolumeClaim:
            claimName: ${PVC_NAME}-vol
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - "${NAME}"
        from:
          kind: ImageStreamTag
          name: "${NAME}:latest"
      type: ImageChange

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: "${NAME}"
    name: "${NAME}"
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: "${NAME}"
    sessionAffinity: None
    type: ClusterIP

parameters:
- name: NAME
  displayName: Name
  description: The name assigned to all objects and the related imagestream.
  required: true
- name: PVC_NAME
  displayName: Name
  description: The name assigned to the pvc.
  required: true
- name: POSTGRES_CONNECTION
  displayNae: Postgres
  description: Connection info for postgres
  required: true
  value: postgresql+psycopg2://airflow:airflow@airflowdb:5432/airflow
- name: VOLUME_CAPACITY
  displayName: Volume Capacity
  description: Volume space available for data, e.g. 512Mi, 2Gi
  required: true
  value: 2Gi